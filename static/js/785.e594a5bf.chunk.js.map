{"version":3,"file":"static/js/785.e594a5bf.chunk.js","mappings":"yNAyCA,UArCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAECC,EAAAA,EAAAA,IAAmBT,GAFpB,OAEXU,EAFW,OAGjBN,EAAWM,GAHM,gDAKjBJ,EAAS,EAAD,IALS,yDAAH,qDAQlBE,GACD,GAAE,CAACR,KAGF,gCACGK,IAAS,yBAAMA,EAAMM,UACF,IAAnBR,EAAQS,QACP,mDAEA,wBACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QAU5B,C,+LCrCKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACLH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCI,EADlC,wCADK,cACjBZ,EADiB,yBAKhBA,EAAIa,KAAKC,SALO,2CAAH,qDAQTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACRH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCI,EADrC,kBACmDI,EADnD,wCADQ,cACpBhB,EADoB,yBAKnBA,EAAIa,KAAKC,SALU,2CAAH,sDAQZG,EAAkB,mCAAG,WAAMV,GAAN,uFACdE,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcH,EADd,oBAC4BC,EAD5B,oBADc,cAC1BR,EAD0B,yBAKzBA,EAAIa,MALqB,2CAAH,sDAQlBK,EAAkB,mCAAG,WAAMX,GAAN,uFACdE,EAAAA,EAAAA,IAAA,iBACNF,GADM,OACDG,EADC,oBACkCF,EADlC,oBADc,cAC1BR,EAD0B,yBAKzBA,EAAIa,KAAKM,MALgB,2CAAH,sDAQlBpB,EAAkB,mCAAG,WAAOQ,GAAP,4FAAWK,EAAX,+BAAkB,EAAlB,SACdH,EAAAA,EAAAA,IAAA,iBACNF,GADM,OACDG,EADC,oBACkCF,EADlC,gCACiEI,IAFnD,cAC1BZ,EAD0B,yBAKzBA,EAAIa,KAAKC,SALgB,2CAAH,qD","sources":["components/Reviews/Reviews.js","services/movies-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'services/movies-api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const res = await fetchMoviesReviews(movieId);\n        setReviews(res);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <div>{error.message}</div>}\n      {reviews.length === 0 ? (\n        <div>No reviews available</div>\n      ) : (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'a1a8ae9a926656e58e23aaea89dbc753';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","fetchMoviesReviews","res","message","length","map","review","author","content","id","API_KEY","axios","END_POINTS","getMovies","page","data","results","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast"],"sourceRoot":""}