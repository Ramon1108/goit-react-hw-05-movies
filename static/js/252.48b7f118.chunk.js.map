{"version":3,"file":"static/js/252.48b7f118.chunk.js","mappings":"oKA4BA,IAzBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,UACE,wBAAKI,OAFAD,EADC,OAUnB,C,sDCjBD,MAAwB,2B,SCCT,SAASK,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,eAAIC,UAAWC,EAAf,SAAyBF,GACjC,C,+LCFKG,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACLH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCI,EADlC,wCADK,cACjBC,EADiB,yBAKhBA,EAAIC,KAAKC,SALO,2CAAH,qDAQTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcL,EAAd,+BAAqB,EAArB,SACRH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCI,EADrC,kBACmDK,EADnD,wCADQ,cACpBJ,EADoB,yBAKnBA,EAAIC,KAAKC,SALU,2CAAH,sDAQZG,EAAkB,mCAAG,WAAMnB,GAAN,uFACdU,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcX,EADd,oBAC4BS,EAD5B,oBADc,cAC1BK,EAD0B,yBAKzBA,EAAIC,MALqB,2CAAH,sDAQlBK,EAAkB,mCAAG,WAAMpB,GAAN,uFACdU,EAAAA,EAAAA,IAAA,iBACNV,GADM,OACDW,EADC,oBACkCF,EADlC,oBADc,cAC1BK,EAD0B,yBAKzBA,EAAIC,KAAKM,MALgB,2CAAH,sDAQlBC,EAAkB,mCAAG,WAAOtB,GAAP,4FAAWa,EAAX,+BAAkB,EAAlB,SACdH,EAAAA,EAAAA,IAAA,iBACNV,GADM,OACDW,EADC,oBACkCF,EADlC,gCACiEI,IAFnD,cAC1BC,EAD0B,yBAKzBA,EAAIC,KAAKC,SALgB,2CAAH,qD,8IC3ChB,SAASO,IACtB,OACE,yDAC6B,SAAC,KAAD,CAAMrB,GAAG,IAAT,uBAA8B,MAG9D,CCDc,SAASsB,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO7B,EAAP,KAAe8B,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXlB,EAAAA,EAAAA,MACGoB,MAAK,SAAAhB,GACJU,EAAUV,EACX,IACAiB,OAAM,SAAAN,GACLC,EAAS,kCACTM,QAAQC,IAAIR,EACb,IACAS,SAAQ,kBAAMN,GAAW,EAAjB,GAGd,GAAE,IAEH,IAAMO,GAAcR,IAAYjC,EAAO0C,OACvC,OACE,+BACE,UAACC,EAAA,EAAD,YACE,SAAC,IAAD,CAAajC,KAAM,oBAClBuB,IAAYQ,GAAc,cAC1BV,IAAUU,IAAc,yBAAMV,KAC7BU,IAAc,SAACG,EAAA,EAAD,CAAW5C,OAAQA,IAClCyC,IAAc,SAACd,EAAD,QAItB,C","sources":["components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/Pageheading/PageHeading.module.css?fc51","components/Pageheading/Pageheading.js","services/movies-api.js","ui/NotFoundView.jsx","views/HomePage.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__whdE-\"};","import s from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n","import axios from 'axios';\n\nconst API_KEY = 'a1a8ae9a926656e58e23aaea89dbc753';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n","import { Link } from 'react-router-dom';\n\nexport default function NotFoundView() {\n  return (\n    <h1>\n      Page is not found :( Go to <Link to=\"/\">Home page</Link>{' '}\n    </h1>\n  );\n}\n","import Container from 'components/Container/Container';\nimport PageHeading from 'components/Pageheading/Pageheading';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'services/movies-api';\nimport NotFoundView from 'ui/NotFoundView';\n\nexport default function GetTrendingMovies() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = () => {\n      setLoading(true);\n      getMovies()\n        .then(results => {\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(() => setLoading(false));\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  const isNotFound = !loading && !movies.length;\n  return (\n    <>\n      <Container>\n        <PageHeading text={'Trending Movies'} />\n        {loading && !isNotFound && 'Loading ...'}\n        {error && !isNotFound && <div>{error}</div>}\n        {!isNotFound && <MovieList movies={movies} />}\n        {isNotFound && <NotFoundView />}\n      </Container>\n    </>\n  );\n}\n"],"names":["movies","location","useLocation","map","id","original_title","to","state","from","PageHeading","text","className","s","API_KEY","axios","END_POINTS","getMovies","page","res","data","results","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews","NotFoundView","GetTrendingMovies","useState","setMovies","error","setError","loading","setLoading","useEffect","then","catch","console","log","finally","isNotFound","length","Container","MovieList"],"sourceRoot":""}