{"version":3,"file":"static/js/777.a58c4e0b.chunk.js","mappings":"8PAEe,SAASA,IACtB,OACE,yDAC6B,SAAC,KAAD,CAAMC,GAAG,IAAT,uBAA8B,MAG9D,CCDc,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJR,EAAUQ,EACX,IACAC,OAAM,SAAAR,GACLC,EAAS,kCACTQ,QAAQC,IAAIV,EACb,IACAW,SAAQ,kBAAMR,GAAW,EAAjB,GAGd,GAAE,IAEH,IAAMS,GAAcV,IAAYJ,EAAOe,OACvC,OACE,+BACE,UAACC,EAAA,EAAD,YACE,SAAC,IAAD,CAAaC,KAAM,oBAClBb,IAAYU,GAAc,cAC1BZ,IAAUY,IAAc,yBAAMZ,KAC7BY,IAAc,SAACI,EAAA,EAAD,CAAWlB,OAAQA,IAClCc,IAAc,SAAClB,EAAD,QAItB,C,oDCZD,IAzBkB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACbmB,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,wBACGpB,EAAOqB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAM1B,GAAE,kBAAayB,GAAME,MAAO,CAAEC,KAAMN,GAA1C,UACE,wBAAKI,OAFAD,EADC,OAUnB,C,sDCjBD,MAAwB,2B,SCCT,SAASI,EAAT,GAAgC,IAATT,EAAQ,EAARA,KACpC,OAAO,eAAIU,UAAWC,EAAf,SAAyBX,GACjC,C,+LCFKY,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHxB,EAAS,mCAAG,yGAAOyB,EAAP,+BAAc,EAAd,SACLF,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCG,EADlC,wCADK,cACjBC,EADiB,yBAKhBA,EAAIC,KAAKzB,SALO,2CAAH,qDAQT0B,EAAY,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACRF,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCG,EADrC,kBACmDI,EADnD,wCADQ,cACpBH,EADoB,yBAKnBA,EAAIC,KAAKzB,SALU,2CAAH,sDAQZ4B,EAAkB,mCAAG,WAAMf,GAAN,uFACdQ,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcT,EADd,oBAC4BO,EAD5B,oBADc,cAC1BI,EAD0B,yBAKzBA,EAAIC,MALqB,2CAAH,sDAQlBI,EAAkB,mCAAG,WAAMhB,GAAN,uFACdQ,EAAAA,EAAAA,IAAA,iBACNR,GADM,OACDS,EADC,oBACkCF,EADlC,oBADc,cAC1BI,EAD0B,yBAKzBA,EAAIC,KAAKK,MALgB,2CAAH,sDAQlBC,EAAkB,mCAAG,WAAOlB,GAAP,4FAAWU,EAAX,+BAAkB,EAAlB,SACdF,EAAAA,EAAAA,IAAA,iBACNR,GADM,OACDS,EADC,oBACkCF,EADlC,gCACiEG,IAFnD,cAC1BC,EAD0B,yBAKzBA,EAAIC,KAAKzB,SALgB,2CAAH,qD","sources":["ui/NotFoundView.jsx","components/HomePage/HomePage.js","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/Pageheading/PageHeading.module.css?fc51","components/Pageheading/Pageheading.js","services/movies-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport default function NotFoundView() {\n  return (\n    <h1>\n      Page is not found :( Go to <Link to=\"/\">Home page</Link>{' '}\n    </h1>\n  );\n}\n","import Container from 'components/Container/Container';\nimport PageHeading from 'components/Pageheading/Pageheading';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'services/movies-api';\nimport NotFoundView from 'ui/NotFoundView';\n\nexport default function GetTrendingMovies() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = () => {\n      setLoading(true);\n      getMovies()\n        .then(results => {\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(() => setLoading(false));\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  const isNotFound = !loading && !movies.length;\n  return (\n    <>\n      <Container>\n        <PageHeading text={'Trending Movies'} />\n        {loading && !isNotFound && 'Loading ...'}\n        {error && !isNotFound && <div>{error}</div>}\n        {!isNotFound && <MovieList movies={movies} />}\n        {isNotFound && <NotFoundView />}\n      </Container>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__whdE-\"};","import s from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n","import axios from 'axios';\n\nconst API_KEY = 'a1a8ae9a926656e58e23aaea89dbc753';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n"],"names":["NotFoundView","to","GetTrendingMovies","useState","movies","setMovies","error","setError","loading","setLoading","useEffect","getMovies","then","results","catch","console","log","finally","isNotFound","length","Container","text","MovieList","location","useLocation","map","id","original_title","state","from","PageHeading","className","s","API_KEY","axios","END_POINTS","page","res","data","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}